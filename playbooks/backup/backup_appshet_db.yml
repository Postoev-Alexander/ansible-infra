---
- name: Backup PostgreSQL Database
  hosts: postgres_appsheet
  gather_facts: no

  vars_files:
    # Указываем путь к вашему зашифрованному файлу с переменными
    - group_vars/postgres_appsheet/postgres_appsheet.yml

  vars:
    local_backup_path: "/tmp/ansible_backups"
    backup_filename: "backup_{{ postgres_db_name }}_{{ ansible_date_time.iso8601_basic_short }}.sql"

  tasks:
    - name: "1. Create local backup directory on Ansible host"
      ansible.builtin.file:
        path: "{{ local_backup_path }}"
        state: directory
        mode: '0700'
      delegate_to: localhost

    - name: "2. Dump the database to a file on the remote server"
      community.postgresql.postgresql_dump:
        db: "{{ postgres_db_name }}"
        dest: "/tmp/{{ backup_filename }}"
        login_user: "{{ postgres_db_user }}"
        login_password: "{{ postgres_db_password }}"
        login_host: "{{ ansible_host }}" # IP-адрес сервера из inventory
        port: 5432
        ssl_mode: "require" # Указываем, что нужно использовать SSL

    - name: "3. Fetch the backup file from the DB server to the Ansible host"
      ansible.builtin.fetch:
        src: "/tmp/{{ backup_filename }}"
        dest: "{{ local_backup_path }}/"
        flat: yes

    - name: "4. Clean up the backup file from the DB server"
      ansible.builtin.file:
        path: "/tmp/{{ backup_filename }}"
        state: absent

    - name: "SUCCESS: Backup is complete!"
      ansible.builtin.debug:
        msg: "Backup file is saved to {{ local_backup_path }}/{{ backup_filename }} on this machine."