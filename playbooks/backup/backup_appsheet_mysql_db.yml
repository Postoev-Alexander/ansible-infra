---
- name: Backup MySQL Database
  hosts: mysql_appsheet
  gather_facts: no

  vars_files:
    - group_vars/mysql_appsheet/mysql_appsheet.yml

  vars:
    local_backup_path: "/tmp/ansible_backups"
    backup_filename: "backup_appsheet_mysql_db{{ mysql_db_name }}_{{ ansible_date_time.iso8601_basic_short }}.sql.gz"

  pre_tasks:
    - name: "Ensure Python dependencies for MySQL are installed"
      become: yes
      ansible.builtin.apt:
        name: python3-pymysql
        state: present
        update_cache: yes
        
    - name: "Ensure MySQL client tools (mysqldump) are installed" # <-- ДОБАВЬТЕ ЭТУ ЗАДАЧУ
      become: yes
      ansible.builtin.apt:
        name: mysql-client
        state: present
      
  tasks:
    - name: "Gather current date and time"
      ansible.builtin.setup:
        filter:
          - ansible_date_time

    - name: "Create local backup directory"
      ansible.builtin.file:
        path: "{{ local_backup_path }}"
        state: directory
        mode: '0700'
      delegate_to: localhost

    - name: "Dump database to a compressed file on the remote server"
      community.mysql.mysql_db:
        name: "{{ mysql_db_name }}"
        state: dump
        target: "/tmp/{{ backup_filename }}"
        login_host: "{{ ansible_host }}"
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"

    - name: "Fetch the backup file to the Ansible host"
      ansible.builtin.fetch:
        src: "/tmp/{{ backup_filename }}"
        dest: "{{ local_backup_path }}/"
        flat: yes

    - name: "Clean up the backup file from the DB server"
      ansible.builtin.file:
        path: "/tmp/{{ backup_filename }}"
        state: absent