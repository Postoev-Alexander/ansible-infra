services:
  n8n:
    image: n8nio/n8n:{{ n8n_version }} # Используем официальный образ n8n
    container_name: n8n
    restart: always
    #ports:
    #      - "127.0.0.1:5678:5678"
    labels:
      - "traefik.enable=true"
      # Правило маршрутизации: трафик на n8n.winzardy.com будет идти к n8n
      - "traefik.http.routers.n8n.rule=Host(`{{ n8n_subdomain }}.{{ main_domain }}`)"
      - "traefik.http.routers.n8n.entrypoints=web,websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=mytlschallenge"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678" # Внутренний порт n8n
      # Дополнительные заголовки безопасности (рекомендуется)
      - "traefik.http.middlewares.n8n-headers.headers.SSLRedirect=true"
      - "traefik.http.middlewares.n8n-headers.headers.STSSeconds=315360000"
      - "traefik.http.middlewares.n8n-headers.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.n8n-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.n8n-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.n8n-headers.headers.SSLHost={{ main_domain }}"
      - "traefik.http.middlewares.n8n-headers.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.n8n-headers.headers.STSPreload=true"
      - "traefik.http.routers.n8n.middlewares=n8n-headers@docker" # Применяем эти middleware
    environment:
      # Важные переменные окружения для n8n при работе через обратный прокси
      - N8N_HOST={{ n8n_subdomain }}.{{ main_domain }}
      - N8N_PORT=5678 # Внутренний порт контейнера
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://{{ n8n_subdomain }}.{{ main_domain }}/ # Обязательно для правильной работы вебхуков
      - NODE_ENV=production # Режим продакшена
      - GENERIC_TIMEZONE=Europe/Moscow
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true

    volumes:
      - n8n_data:/home/node/.n8n # Для персистентности данных n8n
      # - ./local-files:/files # Если у вас есть локальные файлы для n8n
    networks:
      - {{ traefik_docker_network_name }} # Подключаем n8n к общей сети Traefik


volumes:
  n8n_data:
   name: n8n_data
  # n8n_db_data: # Если используете отдельную БД

networks:
  {{ traefik_docker_network_name }}:
    external: true # Эта сеть создается отдельной ролью docker_network