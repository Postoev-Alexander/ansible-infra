---
- name: 1. Create directory for config and certs
  become: yes
  ansible.builtin.file:
    path: "{{ postgres_config_path }}/certs"
    state: directory
    mode: '0755'

- name: 2. Copy SSL certificates with correct permissions
  become: yes
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ postgres_config_path }}/certs/{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: 999
    group: 999
  with_items:
    - { src: 'certs/server.crt', dest: 'server.crt', mode: '0644' }
    - { src: 'certs/server.key', dest: 'server.key', mode: '0600' }

- name: 3. Create SQL file for SSL settings from template
  become: yes
  ansible.builtin.template:
    src: "custom-settings.sql.j2"
    dest: "{{ postgres_config_path }}/custom-settings.sql"
    mode: '0644'

# Задача 5 (chown) больше не нужна, так как мы указываем owner/group при копировании
# Задача 4 (копирование старых конфигов) удалена

- name: 6. Ensure PostgreSQL data volume exists
  community.docker.docker_volume:
    name: "{{ postgres_volume_name }}"
    state: present

- name: 7. Deploy PostgreSQL container
  community.docker.docker_compose_v2:
    project_name: "{{ postgres_project_name }}"
    definition: "{{ lookup('template', 'docker-compose.yml.j2') | from_yaml }}"
    state: present

- name: 8. Configure firewall (UFW)
  become: yes
  ansible.builtin.import_tasks: ufw.yml # Вынесем в отдельный файл для чистоты